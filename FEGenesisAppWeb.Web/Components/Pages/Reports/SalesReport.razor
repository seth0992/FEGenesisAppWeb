@page "/reportes/ventas"
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<PageTitle>Reporte de Ventas - GenesisFE</PageTitle>

<div class="container-fluid">
    <RadzenRow class="mb-4">
        <RadzenColumn Size="12">
            <RadzenText TextStyle="TextStyle.H3">Reporte de Ventas</RadzenText>
        </RadzenColumn>
    </RadzenRow>

    <!-- Filtros -->
    <RadzenRow class="mb-4">
        <RadzenColumn Size="12">
            <RadzenCard>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                    <RadzenDatePicker @bind-Value=@startDate
                                      Placeholder="Fecha Inicio"
                                      DateFormat="dd/MM/yyyy"
                                      Class="w-100"
                                      Style="max-width: 200px;" />

                    <RadzenDatePicker @bind-Value=@endDate
                                      Placeholder="Fecha Fin"
                                      DateFormat="dd/MM/yyyy"
                                      Class="w-100"
                                      Style="max-width: 200px;" />

                    <RadzenDropDown Data=@documentTypes
                                    @bind-Value=@selectedDocumentType
                                    TextProperty="Name"
                                    ValueProperty="Code"
                                    AllowClear="true"
                                    Placeholder="Tipo de Documento"
                                    Class="w-100"
                                    Style="max-width: 200px;" />

                    <RadzenButton Text="Generar Reporte"
                                  Icon="search"
                                  ButtonStyle="ButtonStyle.Primary"
                                  Click=@GenerateReport />

                    <RadzenButton Text="Exportar"
                                  Icon="file_download"
                                  ButtonStyle="ButtonStyle.Secondary"
                                  Click=@ExportReport />
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>

    <!-- Tarjetas de Resumen -->
    <RadzenRow class="mb-4">
        <RadzenColumn Size="12" SizeMD="3">
            <RadzenCard>
                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.H6">Total Ventas</RadzenText>
                    <RadzenText TextStyle="TextStyle.H4">₡4,500,000</RadzenText>
                    <div class="d-flex align-items-center">
                        <RadzenIcon Icon="trending_up" Style="color: var(--rz-success);" />
                        <RadzenText TextStyle="TextStyle.Body2">+15% vs periodo anterior</RadzenText>
                    </div>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <RadzenColumn Size="12" SizeMD="3">
            <RadzenCard>
                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.H6">Total Facturas</RadzenText>
                    <RadzenText TextStyle="TextStyle.H4">125</RadzenText>
                    <div class="d-flex align-items-center">
                        <RadzenIcon Icon="trending_up" Style="color: var(--rz-success);" />
                        <RadzenText TextStyle="TextStyle.Body2">+8% vs periodo anterior</RadzenText>
                    </div>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <RadzenColumn Size="12" SizeMD="3">
            <RadzenCard>
                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.H6">Venta Promedio</RadzenText>
                    <RadzenText TextStyle="TextStyle.H4">₡36,000</RadzenText>
                    <div class="d-flex align-items-center">
                        <RadzenIcon Icon="trending_down" Style="color: var(--rz-danger);" />
                        <RadzenText TextStyle="TextStyle.Body2">-3% vs periodo anterior</RadzenText>
                    </div>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <RadzenColumn Size="12" SizeMD="3">
            <RadzenCard>
                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.H6">Impuestos Recaudados</RadzenText>
                    <RadzenText TextStyle="TextStyle.H4">₡585,000</RadzenText>
                    <div class="d-flex align-items-center">
                        <RadzenIcon Icon="trending_up" Style="color: var(--rz-success);" />
                        <RadzenText TextStyle="TextStyle.Body2">+12% vs periodo anterior</RadzenText>
                    </div>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>

    <!-- Gráficos -->
    <RadzenRow class="mb-4">
        <RadzenColumn Size="12" SizeMD="8">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.H6" Class="mb-4">Tendencia de Ventas</RadzenText>
                <RadzenChart>
                    <RadzenLineSeries Data="@salesData"
                                      CategoryProperty="Date"
                                      ValueProperty="Amount"
                                      Title="Ventas">
                        <RadzenMarkers MarkerType="MarkerType.Circle" />
                    </RadzenLineSeries>
                    <RadzenCategoryAxis Padding="20" />
                    <RadzenValueAxis>
                        <RadzenGridLines Visible="true" />
                        <RadzenAxisTitle Text="Monto (₡)" />
                    </RadzenValueAxis>
                </RadzenChart>
            </RadzenCard>
        </RadzenColumn>

        <RadzenColumn Size="12" SizeMD="4">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.H6" Class="mb-4">Ventas por Tipo de Documento</RadzenText>
                <RadzenChart>
                    <RadzenPieSeries Data="@documentTypeData"
                                     CategoryProperty="Type"
                                     ValueProperty="Amount" />
                    <RadzenLegend Position="LegendPosition.Bottom" />
                </RadzenChart>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>

    <!-- Datos Detallados -->
    <RadzenRow>
        <RadzenColumn Size="12">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.H6" Class="mb-4">Detalle de Ventas</RadzenText>
                <RadzenDataGrid Data="@salesDetails"
                                TItem="SaleDetail"
                                AllowPaging="true"
                                PageSize="10">
                    <Columns>
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Date" Title="Fecha">
                            <Template Context="data">
                                @data.Date.ToShortDateString()
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="SaleDetail" Property="DocumentType" Title="Tipo" />
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Number" Title="Número" />
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Client" Title="Cliente" />
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Subtotal" Title="Subtotal">
                            <Template Context="data">
                                @data.Subtotal.ToString("C2")
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Tax" Title="Impuesto">
                            <Template Context="data">
                                @data.Tax.ToString("C2")
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Total" Title="Total">
                            <Template Context="data">
                                @data.Total.ToString("C2")
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="SaleDetail" Property="Status" Title="Estado">
                            <Template Context="data">
                                <RadzenBadge BadgeStyle="@GetStatusBadgeStyle(data.Status)"
                                             Text="@GetStatusTranslation(data.Status)" />
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
</div>

@code {
    private DateTime? startDate = DateTime.Now.AddDays(-30);
    private DateTime? endDate = DateTime.Now;
    private string? selectedDocumentType;
    private List<DocumentType> documentTypes = new();
    private List<SaleData> salesData = new();
    private List<DocumentTypeData> documentTypeData = new();
    private List<SaleDetail> salesDetails = new();

    protected override void OnInitialized()
    {
        LoadMockData();
    }

    private void LoadMockData()
    {
        // Tipos de documento para el ejemplo
        documentTypes = new List<DocumentType>
        {
            new() { Code = "01", Name = "Factura Electrónica" },
            new() { Code = "02", Name = "Nota de Débito" },
            new() { Code = "03", Name = "Nota de Crédito" },
            new() { Code = "04", Name = "Tiquete Electrónico" }
        };

        // Resto del código sigue igual
    }

    private async Task GenerateReport()
    {
        ToastService.ShowInfo("Generando reporte...");
        await Task.Delay(1000);
        ToastService.ShowSuccess("Reporte generado exitosamente");
    }

    private async Task ExportReport()
    {
        ToastService.ShowInfo("Exportando reporte...");
        await Task.Delay(1000);
        ToastService.ShowSuccess("Reporte exportado exitosamente");
    }

    private BadgeStyle GetStatusBadgeStyle(string status)
    {
        return status switch
        {
            "Approved" => BadgeStyle.Success,
            "Pending" => BadgeStyle.Warning,
            "Rejected" => BadgeStyle.Danger,
            _ => BadgeStyle.Light
        };
    }

    private string GetStatusTranslation(string status)
    {
        return status switch
        {
            "Approved" => "Aprobada",
            "Pending" => "Pendiente",
            "Rejected" => "Rechazada",
            _ => status
        };
    }

    // Clases del modelo permanecen iguales

    private class DocumentType
    {
        public string Code { get; set; }
        public string Name { get; set; }
    }

    private class SaleData
    {
        public string Date { get; set; }
        public decimal Amount { get; set; }
    }

    private class DocumentTypeData
    {
        public string Type { get; set; }
        public decimal Amount { get; set; }
    }

    private class SaleDetail
    {
        public DateTime Date { get; set; }
        public string DocumentType { get; set; }
        public string Number { get; set; }
        public string Client { get; set; }
        public decimal Subtotal { get; set; }
        public decimal Tax { get; set; }
        public decimal Total { get; set; }
        public string Status { get; set; }
    }
}